//@flow
/*eslint-disable*/
import { createSelector } from 'reselect';
import _l from 'lib/i18n';
import { PhoneTypes, EmailTypes, UIDefaults } from 'Constants';

addTranslations({
  'en-US': {
    Afghanistan: 'Afghanistan',
    'Aland Islands': 'Aland Islands',
    Albania: 'Albania',
    Algeria: 'Algeria',
    'American Samoa': 'American Samoa',
    Andorra: 'Andorra',
    Angola: 'Angola',
    Anguilla: 'Anguilla',
    Antigua: 'Antigua',
    Argentina: 'Argentina',
    Armenia: 'Armenia',
    Aruba: 'Aruba',
    Australia: 'Australia',
    Austria: 'Austria',
    Azerbaijan: 'Azerbaijan',
    Bahamas: 'Bahamas',
    Bahrain: 'Bahrain',
    Bangladesh: 'Bangladesh',
    Barbados: 'Barbados',
    Belarus: 'Belarus',
    Belgium: 'Belgium',
    Belize: 'Belize',
    Benin: 'Benin',
    Bermuda: 'Bermuda',
    Bhutan: 'Bhutan',
    Bolivia: 'Bolivia',
    Bosnia: 'Bosnia',
    Botswana: 'Botswana',
    'Bouvet Island': 'Bouvet Island',
    Brazil: 'Brazil',
    'British Virgin Islands': 'British Virgin Islands',
    Brunei: 'Brunei',
    Bulgaria: 'Bulgaria',
    'Burkina Faso': 'Burkina Faso',
    Burundi: 'Burundi',
    'Caicos Islands': 'Caicos Islands',
    Cambodia: 'Cambodia',
    Cameroon: 'Cameroon',
    Canada: 'Canada',
    'Cape Verde': 'Cape Verde',
    'Cayman Islands': 'Cayman Islands',
    'Central African Republic': 'Central African Republic',
    Chad: 'Chad',
    Chile: 'Chile',
    China: 'China',
    'Christmas Island': 'Christmas Island',
    'Cocos Islands': 'Cocos Islands',
    Colombia: 'Colombia',
    Comoros: 'Comoros',
    'Congo Brazzaville': 'Congo Brazzaville',
    Congo: 'Congo',
    'Cook Islands': 'Cook Islands',
    'Costa Rica': 'Costa Rica',
    'Cote Divoire': 'Cote Divoire',
    Croatia: 'Croatia',
    Cuba: 'Cuba',
    Cyprus: 'Cyprus',
    'Czech Republic': 'Czech Republic',
    Denmark: 'Denmark',
    Djibouti: 'Djibouti',
    Dominica: 'Dominica',
    'Dominican Republic': 'Dominican Republic',
    Ecuador: 'Ecuador',
    Egypt: 'Egypt',
    'El Salvador': 'El Salvador',
    England: 'England',
    'Equatorial Guinea': 'Equatorial Guinea',
    Eritrea: 'Eritrea',
    Estonia: 'Estonia',
    Ethiopia: 'Ethiopia',
    'European Union': 'European Union',
    'Falkland Islands': 'Falkland Islands',
    'Faroe Islands': 'Faroe Islands',
    Fiji: 'Fiji',
    Finland: 'Finland',
    France: 'France',
    'French Guiana': 'French Guiana',
    'French Polynesia': 'French Polynesia',
    'French Territories': 'French Territories',
    Gabon: 'Gabon',
    Gambia: 'Gambia',
    Georgia: 'Georgia',
    Germany: 'Germany',
    Ghana: 'Ghana',
    Gibraltar: 'Gibraltar',
    Greece: 'Greece',
    Greenland: 'Greenland',
    Grenada: 'Grenada',
    Guadeloupe: 'Guadeloupe',
    Guam: 'Guam',
    Guatemala: 'Guatemala',
    'Guinea-Bissau': 'Guinea-Bissau',
    Guinea: 'Guinea',
    Guyana: 'Guyana',
    Haiti: 'Haiti',
    'Heard Island': 'Heard Island',
    Honduras: 'Honduras',
    'Hong Kong': 'Hong Kong',
    Hungary: 'Hungary',
    Iceland: 'Iceland',
    India: 'India',
    'Indian Ocean Territory': 'Indian Ocean Territory',
    Indonesia: 'Indonesia',
    Iran: 'Iran',
    Iraq: 'Iraq',
    Ireland: 'Ireland',
    Israel: 'Israel',
    Italy: 'Italy',
    Jamaica: 'Jamaica',
    Japan: 'Japan',
    Jordan: 'Jordan',
    Kazakhstan: 'Kazakhstan',
    Kenya: 'Kenya',
    Kiribati: 'Kiribati',
    Kuwait: 'Kuwait',
    Kyrgyzstan: 'Kyrgyzstan',
    Laos: 'Laos',
    Latvia: 'Latvia',
    Lebanon: 'Lebanon',
    Lesotho: 'Lesotho',
    Liberia: 'Liberia',
    Libya: 'Libya',
    Liechtenstein: 'Liechtenstein',
    Lithuania: 'Lithuania',
    Luxembourg: 'Luxembourg',
    Macau: 'Macau',
    Macedonia: 'Macedonia',
    Madagascar: 'Madagascar',
    Malawi: 'Malawi',
    Malaysia: 'Malaysia',
    Maldives: 'Maldives',
    Mali: 'Mali',
    Malta: 'Malta',
    'Marshall Islands': 'Marshall Islands',
    Martinique: 'Martinique',
    Mauritania: 'Mauritania',
    Mauritius: 'Mauritius',
    Mayotte: 'Mayotte',
    Mexico: 'Mexico',
    Micronesia: 'Micronesia',
    Moldova: 'Moldova',
    Monaco: 'Monaco',
    Mongolia: 'Mongolia',
    Montenegro: 'Montenegro',
    Montserrat: 'Montserrat',
    Morocco: 'Morocco',
    Mozambique: 'Mozambique',
    Namibia: 'Namibia',
    Nauru: 'Nauru',
    Nepal: 'Nepal',
    'Netherlands Antilles': 'Netherlands Antilles',
    Netherlands: 'Netherlands',
    'New Caledonia': 'New Caledonia',
    'New Guinea': 'New Guinea',
    'New Zealand': 'New Zealand',
    Nicaragua: 'Nicaragua',
    Niger: 'Niger',
    Nigeria: 'Nigeria',
    Niue: 'Niue',
    'Norfolk Island': 'Norfolk Island',
    'North Korea': 'North Korea',
    'Northern Mariana Islands': 'Northern Mariana Islands',
    Norway: 'Norway',
    Oman: 'Oman',
    Pakistan: 'Pakistan',
    Palau: 'Palau',
    Palestine: 'Palestine',
    Panama: 'Panama',
    Paraguay: 'Paraguay',
    Peru: 'Peru',
    Philippines: 'Philippines',
    'Pitcairn Islands': 'Pitcairn Islands',
    Poland: 'Poland',
    Portugal: 'Portugal',
    'Puerto Rico': 'Puerto Rico',
    Qatar: 'Qatar',
    Reunion: 'Reunion',
    Romania: 'Romania',
    Russia: 'Russia',
    Rwanda: 'Rwanda',
    'Saint Helena': 'Saint Helena',
    'Saint Kitts and Nevis': 'Saint Kitts and Nevis',
    'Saint Lucia': 'Saint Lucia',
    'Saint Pierre': 'Saint Pierre',
    'Saint Vincent': 'Saint Vincent',
    Samoa: 'Samoa',
    'San Marino': 'San Marino',
    'Sandwich Islands': 'Sandwich Islands',
    'Sao Tome': 'Sao Tome',
    'Saudi Arabia': 'Saudi Arabia',
    Senegal: 'Senegal',
    Serbia: 'Serbia',
    Seychelles: 'Seychelles',
    'Sierra Leone': 'Sierra Leone',
    Singapore: 'Singapore',
    Slovakia: 'Slovakia',
    Slovenia: 'Slovenia',
    'Solomon Islands': 'Solomon Islands',
    Somalia: 'Somalia',
    'South Africa': 'South Africa',
    'South Korea': 'South Korea',
    Spain: 'Spain',
    'Sri Lanka': 'Sri Lanka',
    Sudan: 'Sudan',
    Suriname: 'Suriname',
    Svalbard: 'Svalbard',
    Swaziland: 'Swaziland',
    Sweden: 'Sweden',
    Switzerland: 'Switzerland',
    Syria: 'Syria',
    Taiwan: 'Taiwan',
    Tajikistan: 'Tajikistan',
    Tanzania: 'Tanzania',
    Thailand: 'Thailand',
    Timorleste: 'Timorleste',
    Togo: 'Togo',
    Tokelau: 'Tokelau',
    Tonga: 'Tonga',
    Trinidad: 'Trinidad',
    Tunisia: 'Tunisia',
    Turkey: 'Turkey',
    Turkmenistan: 'Turkmenistan',
    Tuvalu: 'Tuvalu',
    Uganda: 'Uganda',
    Ukraine: 'Ukraine',
    'United Arab Emirates': 'United Arab Emirates',
    'United States': 'United States',
    Uruguay: 'Uruguay',
    'Us Minor Islands': 'Us Minor Islands',
    'Us Virgin Islands': 'Us Virgin Islands',
    Uzbekistan: 'Uzbekistan',
    Vanuatu: 'Vanuatu',
    'Vatican City': 'Vatican City',
    Venezuela: 'Venezuela',
    Vietnam: 'Vietnam',
    'Wallis and Futuna': 'Wallis and Futuna',
    'Western Sahara': 'Western Sahara',
    Yemen: 'Yemen',
    Zambia: 'Zambia',
    Zimbabwe: 'Zimbabwe',
    Japanese: 'Japanese',
    Norwegian: 'Norwegian',
    English: 'English',
    Portuguese: 'Portuguese',
  },
});

const CountryOptions = () => [
  { value: 'Afghanistan', flag: 'af', text: _l`Afghanistan`, dial: '93' },
  { value: 'Albania', flag: 'al', text: _l`Albania`, dial: '355' },
  { value: 'Algeria', flag: 'dz', text: _l`Algeria`, dial: '213' },
  { value: 'Andorra', flag: 'ad', text: _l`Andorra`, dial: '376' },
  { value: 'Angola', flag: 'ao', text: _l`Angola`, dial: '244' },
  { value: 'Anguilla', flag: 'ai', text: _l`Anguilla`, dial: '1264' },
  { value: 'Antigua', flag: 'ag', text: _l`Antigua and Barbuda`, dial: '1268' },
  { value: 'Argentina', flag: 'ar', text: _l`Argentina`, dial: '54' },
  { value: 'Armenia', flag: 'am', text: _l`Armenia`, dial: '374' },
  { value: 'Australia', flag: 'au', text: _l`Australia`, dial: '61' },
  { value: 'Austria', flag: 'at', text: _l`Austria`, dial: '43' },
  { value: 'Azerbaijan', flag: 'az', text: _l`Azerbaijan`, dial: '994' },
  { value: 'Bahamas', flag: 'bs', text: _l`Bahamas`, dial: '1242' },
  { value: 'Bahrain', flag: 'bh', text: _l`Bahrain`, dial: '973' },
  { value: 'Bangladesh', flag: 'bd', text: _l`Bangladesh`, dial: '880' },
  { value: 'Barbados', flag: 'bb', text: _l`Barbados`, dial: '1246' },
  { value: 'Belarus', flag: 'by', text: _l`Belarus`, dial: '375' },
  { value: 'Belgium', flag: 'be', text: _l`Belgium`, dial: '32' },
  { value: 'Belize', flag: 'bz', text: _l`Belize`, dial: '501' },
  { value: 'Benin', flag: 'bj', text: _l`Benin`, dial: '229' },
  { value: 'Bhutan', flag: 'bt', text: _l`Bhutan`, dial: '975' },
  { value: 'Bolivia', flag: 'bo', text: _l`Bolivia`, dial: '591' },
  { value: 'Bosnia', flag: 'ba', text: _l`Bosnia and Herzegovina`, dial: '387' },
  { value: 'Botswana', flag: 'bw', text: _l`Botswana`, dial: '267' },
  { value: 'Brazil', flag: 'br', text: _l`Brazil`, dial: '55' },
  { value: 'Brunei', flag: 'bn', text: _l`Brunei`, dial: '673' },
  { value: 'Bulgaria', flag: 'bg', text: _l`Bulgaria`, dial: '359' },
  { value: 'Burkina Faso', flag: 'bf', text: _l`Burkina Faso`, dial: '226' },
  { value: 'Burundi', flag: 'bi', text: _l`Burundi`, dial: '257' },
  { value: 'Cambodia', flag: 'kh', text: _l`Cambodia`, dial: '855' },
  { value: 'Cameroon', flag: 'cm', text: _l`Cameroon`, dial: '237' },
  { value: 'Canada', flag: 'ca', text: _l`Canada`, dial: '1' },
  { value: 'Cape Verde', flag: 'cv', text: _l`Cape Verde`, dial: '238' },
  { value: 'Central African Republic', flag: 'cf', text: _l`Central African Republic`, dial: '236' },
  { value: 'Chad', flag: 'td', text: _l`Chad`, dial: '235' },
  { value: 'Chile', flag: 'cl', text: _l`Chile`, dial: '56' },
  { value: 'China', flag: 'cn', text: _l`China`, dial: '86' },
  { value: 'Colombia', flag: 'co', text: _l`Colombia`, dial: '57' },
  { value: 'Comoros', flag: 'km', text: _l`Comoros`, dial: '269' },
  { value: 'Costa Rica', flag: 'cr', text: _l`Costa Rica`, dial: '506' },
  { value: 'Cote Divoire', flag: 'ci', text: _l`Côte d’Ivoire`, dial: '225' },
  { value: 'Croatia', flag: 'hr', text: _l`Croatia`, dial: '385' },
  { value: 'Cuba', flag: 'cu', text: _l`Cuba`, dial: '53' },
  { value: 'Cyprus', flag: 'cy', text: _l`Cyprus`, dial: '357' },
  { value: 'Czech Republic', flag: 'cz', text: _l`Czech Republic`, dial: '420' },
  { value: 'Denmark', flag: 'dk', text: _l`Denmark`, dial: '45' },
  { value: 'Djibouti', flag: 'dj', text: _l`Djibouti`, dial: '253' },
  { value: 'Dominica', flag: 'dm', text: _l`Dominica`, dial: '1767' },
  { value: 'Dominican Republic', flag: 'do', text: _l`Dominican Republic`, dial: '1809' },
  { value: 'Ecuador', flag: 'ec', text: _l`Ecuador`, dial: '593' },
  { value: 'Egypt', flag: 'eg', text: _l`Egypt`, dial: '20' },
  { value: 'El Salvador', flag: 'sv', text: _l`El Salvador`, dial: '503' },
  { value: 'England', flag: 'gb', text: _l`England`, dial: '44' },
  { value: 'Equatorial Guinea', flag: 'gq', text: _l`Equatorial Guinea`, dial: '240' },
  { value: 'Eritrea', flag: 'er', text: _l`Eritrea`, dial: '291' },
  { value: 'Estonia', flag: 'ee', text: _l`Estonia`, dial: '372' },
  { value: 'Ethiopia', flag: 'et', text: _l`Ethiopia`, dial: '251' },
  // dial code for #European Union
  { value: 'Fiji', flag: 'fj', text: _l`Fiji`, dial: '679' },
  { value: 'Finland', flag: 'fi', text: _l`Finland`, dial: '358' },
  { value: 'France', flag: 'fr', text: _l`France`, dial: '33' },
  { value: 'Gabon', flag: 'ga', text: _l`Gabon`, dial: '241' },
  { value: 'Gambia', flag: 'gm', text: _l`Gambia`, dial: '220' },
  { value: 'Georgia', flag: 'ge', text: _l`Georgia`, dial: '995' },
  { value: 'Germany', flag: 'de', text: _l`Germany`, dial: '49' },
  { value: 'Ghana', flag: 'gh', text: _l`Ghana`, dial: '233' },
  { value: 'Greece', flag: 'gr', text: _l`Greece`, dial: '30' },
  { value: 'Grenada', flag: 'gd', text: _l`Grenada`, dial: '1473' },
  { value: 'Guatemala', flag: 'gt', text: _l`Guatemala`, dial: '502' },
  { value: 'Guinea-Bissau', flag: 'gw', text: _l`Guinea-Bissau`, dial: '245' },
  { value: 'Guinea', flag: 'gn', text: _l`Guinea`, dial: '224' },
  { value: 'Guyana', flag: 'gy', text: _l`Guyana`, dial: '592' },
  { value: 'Haiti', flag: 'ht', text: _l`Haiti`, dial: '509' },
  { value: 'Honduras', flag: 'hn', text: _l`Honduras`, dial: '504' },
  { value: 'Hungary', flag: 'hu', text: _l`Hungary`, dial: '36' },
  { value: 'Iceland', flag: 'is', text: _l`Iceland`, dial: '354' },
  { value: 'India', flag: 'in', text: _l`India`, dial: '91' },
  { value: 'Indonesia', flag: 'id', text: _l`Indonesia`, dial: '62' },
  { value: 'Iran', flag: 'ir', text: _l`Iran`, dial: '98' },
  { value: 'Iraq', flag: 'iq', text: _l`Iraq`, dial: '964' },
  { value: 'Ireland', flag: 'ie', text: _l`Ireland`, dial: '353' },
  { value: 'Israel', flag: 'il', text: _l`Israel`, dial: '972' },
  { value: 'Italy', flag: 'it', text: _l`Italy`, dial: '39' },
  { value: 'Jamaica', flag: 'jm', text: _l`Jamaica`, dial: '1876' },
  { value: 'Japan', flag: 'jp', text: _l`Japan`, dial: '81' },
  { value: 'Jordan', flag: 'jo', text: _l`Jordan`, dial: '962' },
  { value: 'Kazakhstan', flag: 'kz', text: _l`Kazakhstan`, dial: '76' },
  { value: 'Kenya', flag: 'ke', text: _l`Kenya`, dial: '254' },
  { value: 'Kiribati', flag: 'ki', text: _l`Kiribati`, dial: '686' },
  { value: 'Kuwait', flag: 'kw', text: _l`Kuwait`, dial: '965' },
  { value: 'Kyrgyzstan', flag: 'kg', text: _l`Kyrgyzstan`, dial: '996' },
  { value: 'Laos', flag: 'la', text: _l`Laos`, dial: '856' },
  { value: 'Latvia', flag: 'lv', text: _l`Latvia`, dial: '371' },
  { value: 'Lebanon', flag: 'lb', text: _l`Lebanon`, dial: '961' },
  { value: 'Lesotho', flag: 'ls', text: _l`Lesotho`, dial: '266' },
  { value: 'Liberia', flag: 'lr', text: _l`Liberia`, dial: '231' },
  { value: 'Libya', flag: 'ly', text: _l`Libya`, dial: '218' },
  { value: 'Liechtenstein', flag: 'li', text: _l`Liechtenstein`, dial: '423' },
  { value: 'Lithuania', flag: 'lt', text: _l`Lithuania`, dial: '370' },
  { value: 'Luxembourg', flag: 'lu', text: _l`Luxembourg`, dial: '352' },
  { value: 'Madagascar', flag: 'mg', text: _l`Madagascar`, dial: '261' },
  { value: 'Malawi', flag: 'mw', text: _l`Malawi`, dial: '265' },
  { value: 'Malaysia', flag: 'my', text: _l`Malaysia`, dial: '60' },
  { value: 'Maldives', flag: 'mv', text: _l`Maldives`, dial: '960' },
  { value: 'Mali', flag: 'ml', text: _l`Mali`, dial: '223' },
  { value: 'Malta', flag: 'mt', text: _l`Malta`, dial: '356' },
  { value: 'Marshall Islands', flag: 'mh', text: _l`Marshall Islands`, dial: '692' },
  { value: 'Mauritania', flag: 'mr', text: _l`Mauritania`, dial: '222' },
  { value: 'Mauritius', flag: 'mu', text: _l`Mauritius`, dial: '230' },
  { value: 'Mayotte', flag: 'yt', text: _l`Mayotte`, dial: '262269' },
  { value: 'Mexico', flag: 'mx', text: _l`Mexico`, dial: '52' },
  { value: 'Micronesia', flag: 'fm', text: _l`Micronesia`, dial: '691' },
  { value: 'Moldova', flag: 'md', text: _l`Moldova`, dial: '373' },
  { value: 'Monaco', flag: 'mc', text: _l`Monaco`, dial: '377' },
  { value: 'Mongolia', flag: 'mn', text: _l`Mongolia`, dial: '976' },
  { value: 'Montenegro', flag: 'me', text: _l`Montenegro`, dial: '382' },
  { value: 'Morocco', flag: 'ma', text: _l`Morocco`, dial: '212' },
  { value: 'Mozambique', flag: 'mz', text: _l`Mozambique`, dial: '258' },
  { value: 'Namibia', flag: 'na', text: _l`Namibia`, dial: '264' },
  { value: 'Nauru', flag: 'nr', text: _l`Nauru`, dial: '674' },
  { value: 'Nepal', flag: 'np', text: _l`Nepal`, dial: '977' },
  { value: 'Netherlands', flag: 'nl', text: _l`Netherlands`, dial: '31' },
  { value: 'New Zealand', flag: 'nz', text: _l`New Zealand`, dial: '64' },
  { value: 'Nicaragua', flag: 'ni', text: _l`Nicaragua`, dial: '505' },
  { value: 'Niger', flag: 'ne', text: _l`Niger`, dial: '227' },
  { value: 'Nigeria', flag: 'ng', text: _l`Nigeria`, dial: '234' },
  { value: 'North Korea', flag: 'kp', text: _l`North Korea`, dial: '850' },
  { value: 'Norway', flag: 'no', text: _l`Norway`, dial: '47' },
  { value: 'Oman', flag: 'om', text: _l`Oman`, dial: '968' },
  { value: 'Pakistan', flag: 'pk', text: _l`Pakistan`, dial: '92' },
  { value: 'Palau', flag: 'pw', text: _l`Palau`, dial: '680' },
  { value: 'Panama', flag: 'pa', text: _l`Panama`, dial: '507' },
  { value: 'Paraguay', flag: 'py', text: _l`Paraguay`, dial: '595' },
  { value: 'Peru', flag: 'pe', text: _l`Peru`, dial: '51' },
  { value: 'Philippines', flag: 'ph', text: _l`Philippines`, dial: '63' },
  { value: 'Poland', flag: 'pl', text: _l`Poland`, dial: '48' },
  { value: 'Portugal', flag: 'pt', text: _l`Portugal`, dial: '351' },
  { value: 'Qatar', flag: 'qa', text: _l`Qatar`, dial: '974' },
  { value: 'Romania', flag: 'ro', text: _l`Romania`, dial: '40' },
  { value: 'Russia', flag: 'ru', text: _l`Russia`, dial: '7' },
  { value: 'Rwanda', flag: 'rw', text: _l`Rwanda`, dial: '250' },
  { value: 'Saint Kitts and Nevis', flag: 'kn', text: _l`Saint Kitts and Nevis`, dial: '1869' },
  { value: 'Saint Lucia', flag: 'lc', text: _l`Saint Lucia`, dial: '1758' },
  { value: 'Samoa', flag: 'ws', text: _l`Samoa`, dial: '685' },
  { value: 'San Marino', flag: 'sm', text: _l`San Marino`, dial: '378' },
  { value: 'Sao Tome', flag: 'st', text: _l`Sao Tome and Principe`, dial: '239' },
  { value: 'Saudi Arabia', flag: 'sa', text: _l`Saudi Arabia`, dial: '966' },
  { value: 'Senegal', flag: 'sn', text: _l`Senegal`, dial: '221' },
  { value: 'Serbia', flag: 'cs', text: _l`Serbia`, dial: '381' },
  { value: 'Seychelles', flag: 'sc', text: _l`Seychelles`, dial: '248' },
  { value: 'Sierra Leone', flag: 'sl', text: _l`Sierra Leone`, dial: '232' },
  { value: 'Singapore', flag: 'sg', text: _l`Singapore`, dial: '65' },
  { value: 'Slovakia', flag: 'sk', text: _l`Slovakia`, dial: '421' },
  { value: 'Slovenia', flag: 'si', text: _l`Slovenia`, dial: '386' },
  { value: 'Solomon Islands', flag: 'sb', text: _l`Solomon Islands`, dial: '677' },
  { value: 'Somalia', flag: 'so', text: _l`Somalia`, dial: '252' },
  { value: 'South Africa', flag: 'za', text: _l`South Africa`, dial: '27' },
  { value: 'South Korea', flag: 'kr', text: _l`South Korea`, dial: '82' },
  { value: 'Spain', flag: 'es', text: _l`Spain`, dial: '34' },
  { value: 'Sri Lanka', flag: 'lk', text: _l`Sri Lanka`, dial: '94' },
  { value: 'Sudan', flag: 'sd', text: _l`Sudan`, dial: '249' },
  { value: 'Suriname', flag: 'sr', text: _l`Suriname`, dial: '597' },
  { value: 'Swaziland', flag: 'sz', text: _l`Swaziland`, dial: '268' },
  { value: 'Sweden', flag: 'se', text: _l`Sweden`, dial: '46' },
  { value: 'Switzerland', flag: 'ch', text: _l`Switzerland`, dial: '41' },
  { value: 'Syria', flag: 'sy', text: _l`Syria`, dial: '963' },
  { value: 'Tajikistan', flag: 'tj', text: _l`Tajikistan`, dial: '992' },
  { value: 'Tanzania', flag: 'tz', text: _l`Tanzania`, dial: '255' },
  { value: 'Thailand', flag: 'th', text: _l`Thailand`, dial: '66' },
  { value: 'Togo', flag: 'tg', text: _l`Togo`, dial: '228' },
  { value: 'Tonga', flag: 'to', text: _l`Tonga and Tobago`, dial: '676' },
  { value: 'Trinidad', flag: 'tt', text: _l`Trinidad`, dial: '1868' },
  { value: 'Tunisia', flag: 'tn', text: _l`Tunisia`, dial: '216' },
  { value: 'Turkey', flag: 'tr', text: _l`Turkey`, dial: '90' },
  { value: 'Turkmenistan', flag: 'tm', text: _l`Turkmenistan`, dial: '993' },
  { value: 'Tuvalu', flag: 'tv', text: _l`Tuvalu`, dial: '688' },
  { value: 'Uganda', flag: 'ug', text: _l`Uganda`, dial: '256' },
  { value: 'Ukraine', flag: 'ua', text: _l`Ukraine`, dial: '380' },
  { value: 'United Arab Emirates', flag: 'ae', text: _l`United Arab Emirates`, dial: '971' },
  { value: 'United States', flag: 'us', text: _l`United States of America`, dial: '1' },
  { value: 'United Kingdom', flag: 'uk', text: _l`United Kingdom`, dial: '2' },
  { value: 'Uruguay', flag: 'uy', text: _l`Uruguay`, dial: '598' },
  { value: 'Uzbekistan', flag: 'uz', text: _l`Uzbekistan`, dial: '998' },
  { value: 'Vanuatu', flag: 'vu', text: _l`Vanuatu`, dial: '678' },
  { value: 'Venezuela', flag: 've', text: _l`Venezuela`, dial: '58' },
  { value: 'VietNam', flag: 'vn', text: _l`VietNam`, dial: '84' },
  { value: 'Yemen', flag: 'ye', text: _l`Yemen`, dial: '967' },
  { value: 'Zambia', flag: 'zm', text: _l`Zambia`, dial: '260' },
  { value: 'Zimbabwe', flag: 'zw', text: _l`Zimbabwe`, dial: '263' },
];

const generateCountryOptions = () => [
  { value: 'England', flag: 'gb', text: _l`English`, dial: '44' },
  { value: 'Spain', flag: 'es', text: `Español`, dial: '34' },
  { value: 'Portugal', flag: 'pt', text: `Português`, dial: '351' },
  { value: 'Germany', flag: 'de', text: `Deutsch`, dial: '49' },
  { value: 'Sweden', flag: 'se', text: `Svenska`, dial: '46' },
];

addTranslations({
  'en-US': {
    Japanese: 'Japanese',
    Norwegian: 'Norwegian',
    English: 'English',
    Spanish: 'Spanish',
    Portuguese: 'Portuguese',
  },
});

export const getLanguageOptions = () => [
  { key: 'en', value: 'en', flag: 'gb', text: `English` },
  { key: 'vi', value: 'vi', flag: 'vn', text: `Tiếng Việt` },
  // { key: 'es', value: 'es', flag: 'es', text: `Español` },
  // { key: 'de', value: 'de', flag: 'de', text: `Deutsch` },
  // { key: 'se', value: 'se', flag: 'se', text: `Svenska` },
];

addTranslations({
  'en-US': {
    Blue: 'Blue',
    Green: 'Green',
    Red: 'Red',
    Yellow: 'Yellow',
  },
});

export const generateDiscProfileOptions = () => [
  { key: 'BLUE', value: 'BLUE', text: _l`Blue`, label: { color: 'blue', circular: true, empty: true } },
  { key: 'GREEN', value: 'GREEN', text: _l`Green`, label: { color: 'green', circular: true, empty: true } },
  { key: 'RED', value: 'RED', text: _l`Red`, label: { color: 'red', circular: true, empty: true } },
  { key: 'YELLOW', value: 'YELLOW', text: _l`Yellow`, label: { color: 'yellow', circular: true, empty: true } },
];

addTranslations({
  'en-US': {
    Good: 'Good',
    Neutral: 'Neutral',
    Bad: 'Bad',
  },
});

export const generateRelationshipOptions = () => [
  { key: 'GREEN', value: 'GREEN', text: _l`Good`, label: { color: 'green', circular: true, empty: true } },
  { key: 'YELLOW', value: 'YELLOW', text: _l`Neutral`, label: { color: 'yellow', circular: true, empty: true } },
  { key: 'RED', value: 'RED', text: _l`Bad`, label: { color: 'red', circular: true, empty: true } },
];

export const isTimeBefore = (date, hour, minute, second) => {
  var nowInSecond = date.getHours() * 60 * 60 + date.getMinutes() * 60 + date.getSeconds();
  var timeInSecond = hour * 60 * 60 + minute * 60 + second;
  return nowInSecond < timeInSecond;
};

export const isEndOfDayPopup = (date) => {
  return date.getHours() === 17 || date.getHours() === 18 || date.getHours() === 19;
};

addTranslations({
  'en-US': {
    Home: 'Home',
    iCloud: 'iCloud',
    Work: 'Work',
    Other: 'Other',
  },
});

const generateEmailOptions = () => [
  { key: EmailTypes.Home, value: EmailTypes.Home, text: _l`Home` },
  { key: EmailTypes.iCloud, value: EmailTypes.iCloud, text: _l`iCloud` },
  { key: EmailTypes.Work, value: EmailTypes.Work, text: _l`Work` },
  { key: EmailTypes.Other, value: EmailTypes.Other, text: _l`Other` },
];

addTranslations({
  'en-US': {
    Mobile: 'Mobile',
    Main: 'Main',
    Home: 'Home',
    'Home fax': 'Home fax',
    iPhone: 'iPhone',
    Work: 'Work',
    Other: 'Other',
  },
});

const generatePhoneOptions = () => [
  { key: PhoneTypes.Mobile, value: PhoneTypes.Mobile, text: _l`Mobile` },
  { key: PhoneTypes.Main, value: PhoneTypes.Main, text: _l`Main` },
  { key: PhoneTypes.Home, value: PhoneTypes.Home, text: _l`Home` },
  { key: PhoneTypes.HomeFax, value: PhoneTypes.HomeFax, text: _l`Home fax` },
  { key: PhoneTypes.iPhone, value: PhoneTypes.iPhone, text: _l`iPhone` },
  { key: PhoneTypes.Work, value: PhoneTypes.Work, text: _l`Work` },
  // { key: PhoneTypes.WorkFax, value: PhoneTypes.WorkFax, text: _l`Work fax` },
  { key: PhoneTypes.Other, value: PhoneTypes.Other, text: _l`Other` },
];

export const getCountryOptions = createSelector(
  (state) => state.ui.app.locale,
  (locale) => generateCountryOptions()
);

// export const getLanguageSelection = createSelector((state) => state.ui.app.locale, (locale) => generateLanguageOption());

export const getDiscProfileOptions = createSelector(
  (state) => state.ui.app.locale,
  (locale) => generateDiscProfileOptions()
);

export const getRelationshipOptions = createSelector(
  (state) => state.ui.app.locale,
  (locale) => generateRelationshipOptions()
);

export const getEmailOptions = createSelector(
  (state) => state.ui.app.locale,
  (locale) => generateEmailOptions()
);

export const getPhoneOptions = createSelector(
  (state) => state.ui.app.locale,
  (locale) => generatePhoneOptions()
);

export const getListCountryOptions = createSelector(
  (state) => state.ui.app.locale,
  (locale) => CountryOptions()
);
export const getCurrencies = () => [
  { value: 'AED', flag: 'ae', text: 'AED' },
  { value: 'AFN', flag: 'af', text: 'AFN' },
  { value: 'ALL', flag: 'al', text: 'ALL' },
  { value: 'AMD', flag: 'am', text: 'AMD' },
  { value: 'AOA', flag: 'ao', text: 'AOA' },
  { value: 'ARS', flag: 'ar', text: 'ARS' },
  { value: 'AUD', flag: 'ai', text: 'AUD' },
  { value: 'AWG', flag: 'aw', text: 'AWG' },
  { value: 'AZN', flag: 'az', text: 'AZN' },
  { value: 'BAM', flag: 'ba', text: 'BAM' },
  { value: 'BBD', flag: 'bb', text: 'BBD' },
  { value: 'BDT', flag: 'bd', text: 'BDT' },
  { value: 'BGN', flag: 'bg', text: 'BGN' },
  { value: 'BHD', flag: 'bh', text: 'BHD' },
  { value: 'BIF', flag: 'bi', text: 'BIF' },
  { value: 'BMD', flag: 'bm', text: 'BMD' },
  { value: 'BND', flag: 'bn', text: 'BND' },
  { value: 'BOB', flag: 'bo', text: 'BOB' },
  { value: 'BRL', flag: 'br', text: 'BRL' },
  { value: 'BSD', flag: 'bs', text: 'BSD' },
  { value: 'BTN', flag: 'bt', text: 'BTN' },
  { value: 'BWP', flag: 'bw', text: 'BWP' },
  { value: 'BYR', flag: 'by', text: 'BYR' },
  { value: 'BZD', flag: 'bz', text: 'BZD' },
  { value: 'CAD', flag: 'ca', text: 'CAD' },
  { value: 'CDF', flag: 'cd', text: 'CDF' },
  { value: 'CHF', flag: 'ch', text: 'CHF' },
  { value: 'CLP', flag: 'cl', text: 'CLP' },
  { value: 'CNY', flag: 'cn', text: 'CNY' },
  { value: 'COP', flag: 'co', text: 'COP' },
  { value: 'CRC', flag: 'cr', text: 'CRC' },
  { value: 'CUP', flag: 'cu', text: 'CUP' },
  { value: 'CVE', flag: 'cv', text: 'CVE' },
  { value: 'CZK', flag: 'cz', text: 'CZK' },
  { value: 'DJF', flag: 'dj', text: 'DJF' },
  { value: 'DKK', flag: 'dk', text: 'DKK' },
  { value: 'DOP', flag: 'do', text: 'DOP' },
  { value: 'DZD', flag: 'dz', text: 'DZD' },
  { value: 'EGP', flag: 'eg', text: 'EGP' },
  { value: 'ERN', flag: 'er', text: 'ERN' },
  { value: 'ETB', flag: 'et', text: 'ETB' },
  { value: 'EUR', flag: 'eu', text: 'EUR' },
  { value: 'FJD', flag: 'fj', text: 'FJD' },
  { value: 'FKP', flag: 'fk', text: 'FKP' },
  { value: 'GBP', flag: 'gb', text: 'GBP' },
  { value: 'GEL', flag: 'ge', text: 'GEL' },
  { value: 'GHS', flag: 'gh', text: 'GHS' },
  { value: 'GMD', flag: 'gm', text: 'GMD' },
  { value: 'GNF', flag: 'gn', text: 'GNF' },
  { value: 'GTQ', flag: 'gt', text: 'GTQ' },
  { value: 'GYD', flag: 'gy', text: 'GYD' },
  { value: 'HKD', flag: 'hk', text: 'HKD' },
  { value: 'HNL', flag: 'hn', text: 'HNL' },
  { value: 'HRK', flag: 'hr', text: 'HRK' },
  { value: 'HTG', flag: 'ht', text: 'HTG' },
  { value: 'HUF', flag: 'hu', text: 'HUF' },
  { value: 'IDR', flag: 'id', text: 'IDR' },
  { value: 'ILS', flag: 'it', text: 'ILS' },
  { value: 'IMP', flag: 'im', text: 'IMP' },
  { value: 'INR', flag: 'in', text: 'INR' },
  { value: 'IQD', flag: 'iq', text: 'IQD' },
  { value: 'IRR', flag: 'ir', text: 'IRR' },
  { value: 'ISK', flag: 'is', text: 'ISK' },
  { value: 'JEP', flag: 'ie', text: 'JEP' },
  { value: 'JMD', flag: 'jm', text: 'JMD' },
  { value: 'JOD', flag: 'jo', text: 'JOD' },
  { value: 'JPY', flag: 'jp', text: 'JPY' },
  { value: 'KES', flag: 'ke', text: 'KES' },
  { value: 'KGS', flag: 'kg', text: 'KGS' },
  { value: 'KHR', flag: 'kh', text: 'KHR' },
  { value: 'KMF', flag: 'km', text: 'KMF' },
  { value: 'KPW', flag: 'kp', text: 'KPW' },
  { value: 'KRW', flag: 'kr', text: 'KRW' },
  { value: 'KWD', flag: 'kw', text: 'KWD' },
  { value: 'KYD', flag: 'ky', text: 'KYD' },
  { value: 'KZT', flag: 'kz', text: 'KZT' },
  { value: 'LAK', flag: 'la', text: 'LAK' },
  { value: 'LBP', flag: 'lb', text: 'LBP' },
  { value: 'LKR', flag: 'lk', text: 'LKR' },
  { value: 'LRD', flag: 'lr', text: 'LRD' },
  { value: 'LSL', flag: 'ls', text: 'LSL' },
  { value: 'LTL', flag: 'lt', text: 'LTL' },
  { value: 'LVL', flag: 'lv', text: 'LVL' },
  { value: 'LYD', flag: 'ly', text: 'LYD' },
  { value: 'MAD', flag: 'ma', text: 'MAD' },
  { value: 'MDL', flag: 'md', text: 'MDL' },
  { value: 'MGA', flag: 'mg', text: 'MGA' },
  { value: 'MKD', flag: 'mk', text: 'MKD' },
  { value: 'MMK', flag: 'mm', text: 'MMK' },
  { value: 'MNT', flag: 'mn', text: 'MNT' },
  { value: 'MOP', flag: 'mo', text: 'MOP' },
  { value: 'MRO', flag: 'mr', text: 'MRO' },
  { value: 'MUR', flag: 'mu', text: 'MUR' },
  { value: 'MVR', flag: 'mv', text: 'MVR' },
  { value: 'MWK', flag: 'mw', text: 'MWK' },
  { value: 'MXN', flag: 'mx', text: 'MXN' },
  { value: 'MYR', flag: 'my', text: 'MYR' },
  { value: 'MZN', flag: 'mz', text: 'MZN' },
  { value: 'NAD', flag: 'na', text: 'NAD' },
  { value: 'NGN', flag: 'ng', text: 'NGN' },
  { value: 'NIO', flag: 'ni', text: 'NIO' },
  { value: 'NOK', flag: 'no', text: 'NOK' },
  { value: 'NPR', flag: 'np', text: 'NPR' },
  { value: 'NZD', flag: 'nz', text: 'NZD' },
  { value: 'OMR', flag: 'om', text: 'OMR' },
  { value: 'PAB', flag: 'pa', text: 'PAB' },
  { value: 'PEN', flag: 'pe', text: 'PEN' },
  { value: 'PGK', flag: 'pg', text: 'PGK' },
  { value: 'PHP', flag: 'ph', text: 'PHP' },
  { value: 'PKR', flag: 'pk', text: 'PKR' },
  { value: 'PLN', flag: 'pl', text: 'PLN' },
  { value: 'PRB', flag: 'pr', text: 'PRB' },
  { value: 'PYG', flag: 'py', text: 'PYG' },
  { value: 'QAR', flag: 'qa', text: 'QAR' },
  { value: 'RON', flag: 'ro', text: 'RON' },
  { value: 'RSD', flag: 'rs', text: 'RSD' },
  { value: 'RUB', flag: 'ru', text: 'RUB' },
  { value: 'RWF', flag: 'rw', text: 'RWF' },
  { value: 'SAR', flag: 'sa', text: 'SAR' },
  { value: 'SBD', flag: 'sb', text: 'SBD' },
  { value: 'SCR', flag: 'sc', text: 'SCR' },
  { value: 'SDG', flag: 'sd', text: 'SDG' },
  { value: 'SEK', flag: 'se', text: 'SEK' },
  { value: 'SGD', flag: 'sg', text: 'SGD' },
  { value: 'SHP', flag: 'sh', text: 'SHP' },
  { value: 'SLL', flag: 'sl', text: 'SLL' },
  { value: 'SOS', flag: 'so', text: 'SOS' },
  { value: 'SRD', flag: 'sr', text: 'SRD' },
  { value: 'SSP', flag: 'ss', text: 'SSP' },
  { value: 'STD', flag: 'st', text: 'STD' },
  { value: 'SVC', flag: 'sv', text: 'SVC' },
  { value: 'SYP', flag: 'sy', text: 'SYP' },
  { value: 'SZL', flag: 'sz', text: 'SZL' },
  { value: 'THB', flag: 'th', text: 'THB' },
  { value: 'TJS', flag: 'tj', text: 'TJS' },
  { value: 'TMT', flag: 'tm', text: 'TMT' },
  { value: 'TND', flag: 'tn', text: 'TND' },
  { value: 'TOP', flag: 'to', text: 'TOP' },
  { value: 'TRY', flag: 'tr', text: 'TRY' },
  { value: 'TTD', flag: 'tt', text: 'TTD' },
  { value: 'TWD', flag: 'tw', text: 'TWD' },
  { value: 'TZS', flag: 'tz', text: 'TZS' },
  { value: 'UAH', flag: 'ua', text: 'UAH' },
  { value: 'UGX', flag: 'ug', text: 'UGX' },
  { value: 'USD', flag: 'us', text: 'USD' },
  { value: 'UYU', flag: 'uy', text: 'UYU' },
  { value: 'UZS', flag: 'uz', text: 'UZS' },
  { value: 'VEF', flag: 've', text: 'VEF' },
  { value: 'VND', flag: 'vn', text: 'VND' },
  { value: 'VUV', flag: 'vu', text: 'VUV' },
  { value: 'WST', flag: 'ws', text: 'WST' },
  { value: 'XAF', flag: 'xa', text: 'XAF' },
  { value: 'XCD', flag: 'mxc', text: 'XCD' },
  { value: 'XOF', flag: 'xo', text: 'XOF' },
  { value: 'XPF', flag: 'xp', text: 'XPF' },
  { value: 'YER', flag: 'ye', text: 'YER' },
  { value: 'ZAR', flag: 'za', text: 'ZAR' },
  { value: 'ZMW', flag: 'zm', text: 'ZMW' },
  { value: 'ZWL', flag: 'zw', text: 'ZWL' },
];

export const isEurope = (country) => {
  let europe = [
    'Austria',
    'Belgium',
    'Bulgaria',
    'Croatia',
    'Cyprus',
    'Czech Republic',
    'Denmark',
    'Estonia',
    'Finland',
    'France',
    'Sweden',
    'Germany',
    'Greece',
    'Hungary',
    'Ireland',
    'Italy',
    'Lithuania',
    'Luxembourg',
    'Latvia',
    'Malta',
    'Netherlands',
    'Poland',
    'Portugal',
    'Slovenia',
    'Slovakia',
    'Sweden',
    'Spain',
    'United Kingdom',
    'Romania',
  ];

  return europe.indexOf(country);
};
export const getCountryNameOptions = () => {
  return CountryOptions.map((e) => {
    return e.value;
  });
};
export const getCurrentTimeZone = () => {
  let offset = new Date().getTimezoneOffset();
  let o = Math.abs(offset);
  return (offset < 0 ? '+' : '-') + ('00' + Math.floor(o / 60)).slice(-2) + ('00' + (o % 60)).slice(-2);
};
